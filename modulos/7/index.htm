<!doctype html>
<html lang="pt-br">
<head>
	<title>Tutorial Breakout Js</title>
	<meta name="description" content="Tutorial programação javascript. Jogo breakout. Arrays. Jogo. Como criar um joguinho em javascript com a tag canvas." />
	<link rel="canonical" href="https://rodrigoschio.github.io/tutoriais/modulos/7/index.htm" />
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width" />
	<link rel="icon" href="../../imagens/favicon.ico" />
	<link href="../../css/styles.css" rel="stylesheet" />
	<link href="../../css/prism.css" rel="stylesheet" />
</head>

<body>
	<h1><a href="../../index.htm"><span>Tutoriais</span></a></h1>
	<main>

<article>
<h2>Desenvolvimento do jogo Breakout</h2>
Essa página apresenta o desenvolvimento do jogo Breakout para browsers.<br><br>
<img class=imagem src=screenshot.png onclick="window.open(this.src,'_blank');">
</article>

<article>
<h2>Programando com a linguagem javascript</h2>
Vamos começar criando um arquivo em branco chamado jogo.htm<br>Nesse arquivo vamos digitar o código:
<pre><code class="language-html">&lt;html&gt;
&lt;body&gt;
Daqui vai surgir o jogo
&lt;/body&gt;
&lt;/html&gt;</code></pre>
</article>

<article>
<h2>Criando o elemento canvas</h2>
Vamos apagar a frase e colocar o elemento canvas
<pre><code class="language-html">&lt;canvas&gt;&lt;/canvas&gt;</code></pre>
</article>

<article>
<h2>Testando no navegador</h2>
Se voce salvar o arquivo e clicar duas vezes sobre ele, o navegador irá exibir uma página em branco.<br>Mas o canvas está lá...<br>Para deixar ele visível vamos colocar uma borda:
<pre><code class="language-html">&lt;canvas style='border:1px solid #4a4a4a;'>&lt;/canvas></code></pre>
</article>

<article>
<h2>Tamanho do canvas</h2>
Para setar o tamanho do canvas não se deve usar atributos css.<br>
Deve-se usar atributos da tag. Atributos html.<br><br>
Por uma razão peculiar.
<pre><code class="language-html">&lt;center&gt;&lt;canvas id=canvas width=400 height=450 style='border:1px solid #4a4a4a;'&gt;&lt;/canvas&gt;&lt;/center&gt;</code></pre>
</article>

<article>
<h2>Começando a desenhar</h2>
O motivo que nos leva a usar o elemento canvas é que ele possibilita desenhar na tela codificando.<br>
Os primeiros jogos eletronicos eram em modo texto. Em seguida eram em blocos quadrados. Depois eram desenhados atraves de codificação.<br>
Depois vieram os bmp os gif os jpg. os 3d.<br><br>

Mas esse jogo é da época do quadrado<br>

E usa o canvas que é um elemento que emula um recurso inventado na época do 'desenhar com código'.
</article>

<article>
<h2>Desenhar no canvas</h2>
Para desenhar no canvas é preciso de um 'context'<br>
E um id pro canvas<br><br>
e javascript
<pre><code class="language-html">&lt;html&gt;
&lt;body&gt;
&lt;center&gt;&lt;canvas id=canvas width=400 height=450 style='border:1px solid #4a4a4a;'&gt;&lt;/canvas&gt;&lt;/center&gt;
&lt;script&gt;
canvas=document.getElementById('canvas').getContext('2d');
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
</article>

<article>
<h2>Um círculo</h2>
Pra desenhar o círculo em vermelho dentro do canvas em preciso de algumas propriedades do 'context'.<br>
Alguns métodos e atributos:<br>fillStyle<br>beginPath();<br>arc();<br>fill();
<pre><code class="language-javascript">canvas.fillStyle='#ff0000';
canvas.beginPath();
canvas.arc(50,125,16,0,Math.PI*2,false);
canvas.fill();</code></pre>
</article>

<article>
<h2>Fazendo a bolinha se mover</h2>
Vamos usar a função setTimeout<br><br>Pegar esse código que desenha a bolinha e fazer ele ser executado a cada 10 milissegundos.<br><br>E mudar os dois primeiros parametros da função arc para variáveis x e y, e incrementar essas variáveis cada vez para a bolinha se mover
<pre><code class="language-javascript">x=30;
y=15;
function anda()
{	x+=2;
	y+=2;
	canvas.fillStyle='#ff0000';
	canvas.beginPath();
	canvas.arc(x,y,16,0,Math.PI*2,false);
	canvas.fill();
	setTimeout('anda();',10);
}
anda();</code></pre>
</article>

<article>
<h2>Apagando o rastro da bolinha</h2>

<pre><code class="language-javascript">function anda()
{	x+=2;
	y+=2;
	canvas.fillStyle='#ffffff';
	canvas.fillRect(0,0,400,450);
	canvas.fillStyle='#ff0000';
	canvas.beginPath();
	canvas.arc(x,y,16,0,Math.PI*2,false);
	canvas.fill();
	setTimeout('anda();',10);
}</code></pre>
</article>

<article>
<h2>Fazendo a bolinha pingar nas paredes</h2>
Pra isso vamos precisar de novas variáveis dx e dy que vão armazenar quanto a bolinha avança (ou retrocede) no eixos x e y<br><br>Vamos mudar o valor de dx e de dy quando a bolinha pingar na parede.<br>(quando ela chegar no chão o dx vai mudar de +2 para -2)
<pre><code class="language-html">&lt;script&gt;
canvas=document.getElementById('canvas').getContext('2d');
x=20;
y=200;
tamanho=10;
dx=2;
dy=2;
function anda()
{	x+=dx;
	y+=dy;
	if(x&lt;tamanho)dx*=-1;
	if(y&lt;tamanho)dy*=-1;
	if(x&gt;400-tamanho)dx*=-1;
	if(y&gt;450-tamanho)dy*=-1;
	canvas.fillStyle='#ffffff';
	canvas.fillRect(0,0,400,450);
	canvas.fillStyle='#ff0000';
	canvas.beginPath();
	canvas.arc(x,y,tamanho,0,Math.PI*2,false);
	canvas.fill();
	setTimeout('anda();',10);
}
anda();
&lt;/script&gt;
</tamanho)dx*=-1;></code></pre>
</article>

<article>
<h2>Desenhando a barra</h2>
Iniciando a posição da barra (fora da função anda)
<pre><code class="language-javascript">posicaobarra=150;</code></pre>

Dentro da função anda (após o código que apaga o rastro)
<pre><code class="language-javascript">	canvas.fillStyle='#000000';
	canvas.fillRect(posicaobarra,430,100,20);</code></pre>
</article>

<article>
<h2>Fazendo a barra se mover</h2>
Pra fazer a barra se mover vamos usar o atributo onKeyDown da tag body
<pre><code class="language-html">&lt;body onkeyDown='movebarra(event.keyCode);'&gt;</code></pre>E vamos escrever a função movebarra<br>Inicialmente vamos por um alert pra identificar o código de cada tecla
<pre><code class="language-javascript">function movebarra(tecla)
{	alert(tecla);
}</code></pre>E agora vamos fazer a barra se mover
<pre><code class="language-javascript">function movebarra(tecla)
{	//alert(tecla);
	if(tecla==37)posicaobarra-=40;
	if(tecla==39)posicaobarra+=40;
}</code></pre>
</article>

<article>
<h2>Fazendo a bola pingar na barra</h2>
Quando a bola acertar a barra a bola deve voltar a subir.<br><br>
E dependendo de que parte da barra a bola acertar a bola deve voltar em um certo ângulo<br>Vamos modificar a função anda
<pre><code class="language-javascript">	if(y&gt;430-tamanho)
	{	dif=x-posicaobarra;
		if(dif&gt;-10&amp;&amp;dif&lt;110)
		{	dy*=-1;
			if(dif&gt;-10&amp;&amp;dif&lt;15)dx=-3;
			if(dif&gt;=15&amp;&amp;dif&lt;50)dx=-2;
			if(dif&gt;=50&amp;&amp;dif&lt;85)dx=2;
			if(dif&gt;=85&amp;&amp;dif&lt;110)dx=3;
			y=430-tamanho;
		}
	}</code></pre>

<pre><code class="language-javascript">	if(y&gt;450-tamanho)
		alert('Fim de jogo');
	else
		setTimeout('anda();',10);</code></pre>
</article>

<article>
<h2>Desenhando um bloquinho</h2>
Pra começar vamos apenas desenhar um bloquinho.<br>Vamos criar uma variável bloco que será um array com três índices:<br><li>A posição x do bloco</li><li>A posição y</li><li>Se o bloco deve ser exibido (começa com true e fica false assim que a bola atingir)</li>
<pre><code class="language-javascript">bloco=[10,20,true];</code></pre>

<pre><code class="language-javascript">	if(bloco[2])
	{	canvas.fillStyle='#0000ff';
		canvas.fillRect(bloco[0],bloco[1],50,20);
	}</code></pre>
</article>

<article>
<h2>Fazendo a bolinha pingar e o bloco desaparecer</h2>

<pre><code class="language-javascript">	if(bloco[2])
	{	dif=y-bloco[1]-tamanho;
		if((dy&lt;0&amp;&amp;(dif&gt;0&amp;&amp;dif&lt;20))||(dy&gt;0&amp;&amp;(dif&lt;0&amp;&amp;dif&gt;-20)))
		{	if(x&gt;bloco[0]&amp;&amp;x&lt;bloco[0]+50)
			{	dy*=-1;
				bloco[2]=false;
			}
		}
	}</code></pre>
</article>

<article>
<h2>Fazer funcionar com vários blocos</h2>
Por enquanto fizemos o jogo funcionar com um bloco<br>Mas vamos precisar de um array de blocos<br><br>Vários blocos<br>Vamos colocar antes da declaração do x=20 e y=200 esse trecho de código que inicializa o array de blocos:
<pre><code class="language-javascript">blocos=[];
for(x=0;x&lt;8;x++)for(y=0;y&lt;5;y++)blocos.push([x*50,y*20,true]);</code></pre>
E vamos 'refatorar' o código... transformar todas a ocorrencias de bloco em blocos[indice]:
<pre><code class="language-javascript">	for(c=0;c&lt;blocos.length;c++)if(blocos[c][2])
	{	dif=y-blocos[c][1]-tamanho;
		if((dy&lt;0&amp;&amp;(dif&gt;0&amp;&amp;dif&lt;20))||(dy&gt;0&amp;&amp;(dif&lt;0&amp;&amp;dif&gt;-20)))
		{	if(x&gt;blocos[c][0]&amp;&amp;x&lt;blocos[c][0]+50)
			{	blocos[c][2]=false;
				dy*=-1;
			}
		}
	}</code></pre>

<pre><code class="language-javascript">	for(c=0;c&lt;blocos.length;c++)if(blocos[c][2])
	{	canvas.fillStyle='#0000ff';
		canvas.fillRect(blocos[c][0],blocos[c][1],50,20);
	}</code></pre>
</article>

	<div id="coment"><div id="disqus_thread"></div></div>
	</main>
	<footer>
		<button onclick="location.href = '../../index.htm';">home</button>
		<button onclick="exibe();">seções</button>
		<button onclick="(document.head || document.body).appendChild(s);">comente</button>
	</footer>

	<script src="../../js/script.js"></script>
	<script src="../../js/prism.js"></script>
</body>
</html>
