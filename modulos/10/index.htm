<!doctype html>
<html lang="pt-br">
<head>
	<title>Tutorial Endless Runner</title>
	<meta name="description" content="Tutorial sobre como programar um joguinho com python. Um joguinho simples." />
	<link rel="canonical" href="https://rodrigoschio.github.io/tutoriais/modulos/10/index.htm" />
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width" />
	<link rel="icon" href="../../imagens/favicon.ico" />
	<link href="../../css/styles.css" rel="stylesheet" />
	<link href="../../css/prism.css" rel="stylesheet" />
</head>

<body>
	<h1><a href="../../index.htm"><span>Tutoriais</span></a></h1>
	<main>

<article>
<h2>Criando um joguinho</h2>
Esse tutorial mostra como programar um joguinho simples com a linguagem python.<br><br>
Para seguir esse tutorial é preciso que o python esteja instalado.<br>
Além disso o módulo pygame também é utilizado.
</article>

<article>
<h2>Inicialização e cenário</h2>
<pre><code class="language-python">import pygame

pygame.init()

gameDisplay = pygame.display.set_mode((840,210))
pygame.display.set_caption('Endless Runner')

clock = pygame.time.Clock()
crashed = False

while not crashed:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            crashed = True

    gameDisplay.fill((200,200,250))

    pygame.draw.rect(gameDisplay, (110,110,110), [0,170,840,40])

    pygame.display.update()
    clock.tick(120)

pygame.quit()
quit()</code></pre>
Esse código é a base do tutorial. Salve e execute o arquivo para visualizar o cenário do jogo.
</article>

<article>
<h2>Colocando o herói no cenário</h2>
Faça download da <a href=hero.png>imagem do personagem</a>.<br><br>

Para exibí-lo na tela o comando deve ser inserido dentro do loop.
<pre><code class="language-python">	gameDisplay.blit(pygame.image.load('hero.png'), (74,104))</code></pre>
</article>

<article>
<h2>Colocando os obstaculos no cenário</h2>
Faça download da <a href=obstaculo.png>imagem do obstáculo</a>.<br><br>

Para exibí-lo na tela os comandos devem ser inserido dentro do loop.
<pre><code class="language-python">    gameDisplay.blit(pygame.image.load('obstaculo.png'), (774,134))
    gameDisplay.blit(pygame.image.load('obstaculo.png'), (744,134))
    gameDisplay.blit(pygame.image.load('obstaculo.png'), (714,134))
</code></pre>
</article>

<article>
<h2>Fazendo os obstáculos se mover</h2>
É preciso três variáveis que armazenam as posições do obstáculo.<br><br>
Escreva antes do loop:
<pre><code class="language-python">obs1=974
obs2=744
obs3=714</code></pre>

E dentro do loop:
<pre><code class="language-python">    if obs1>-30: obs1-=2
    else: obs1=850
    if obs2>-30: obs2-=2
    else: obs2=850
    if obs3>-30: obs3-=3
    else: obs3=850

    gameDisplay.blit(pygame.image.load('obstaculo.png'), (obs1,134))
    gameDisplay.blit(pygame.image.load('obstaculo.png'), (obs2,134))
    gameDisplay.blit(pygame.image.load('obstaculo.png'), (obs3,134))
</code></pre>
</article>

<article>
<h2>Fazendo o carinha pular</h2>
Para tratar o pulo serão necessárias 5 condições:
<li>se o cara está no chão e começa o pulo</li>
<li>se o cara está subindo</li>
<li>se o cara está descendo</li>
<li>o momento que ele para de subir</li>
<li>o momento que ele para de descer</li><br>
Inicializa a variável do pulo fora do laço.
<pre><code class="language-python">altura=0</code></pre>

Implementa as condições de subida e descida:
<pre><code class="language-python">    if altura == 0 and event.type == pygame.KEYDOWN: altura=4
    if altura%3==1: altura+=3
    if altura%3==0: altura-=3
    if altura>100: altura=99
    if altura&lt;1: altura=0

    gameDisplay.blit(pygame.image.load('hero.png'), (74,104-altura))
</code></pre>
</article>

<article>
<h2>Código Final</h2>
Implementado um simples collision-detect.
<pre><code class="language-python">import pygame

pygame.init()

gameDisplay = pygame.display.set_mode((840,210))
pygame.display.set_caption('Endless Runner')

clock = pygame.time.Clock()
crashed = False

obs1=974
obs2=744
obs3=714

altura=0

gameover=False

while not crashed:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            crashed = True

    gameDisplay.fill((200,200,250))

    pygame.draw.rect(gameDisplay, (110,110,110), [0,170,840,40])

    if altura == 0 and event.type == pygame.KEYDOWN: altura=4
    if altura%3==1: altura+=3
    if altura%3==0: altura-=3
    if altura>100: altura=99
    if altura&lt;1: altura=0

    gameDisplay.blit(pygame.image.load('hero.png'), (74,104-altura))

    if altura&lt;20 and obs1>40 and obs1&lt;94: gameover=True
    if altura&lt;20 and obs2>40 and obs2&lt;94: gameover=True
    if altura&lt;20 and obs3>40 and obs3&lt;94: gameover=True

    if gameover:
        obs1=974
        obs2=744
        obs3=714
        gameover=False

    if obs1>-30: obs1-=2
    else: obs1=850
    if obs2>-30: obs2-=2
    else: obs2=850
    if obs3>-30: obs3-=3
    else: obs3=850

    gameDisplay.blit(pygame.image.load('obstaculo.png'), (obs1,134))
    gameDisplay.blit(pygame.image.load('obstaculo.png'), (obs2,134))
    gameDisplay.blit(pygame.image.load('obstaculo.png'), (obs3,134))

    pygame.display.update()
    clock.tick(120)

pygame.quit()
quit()
</code></pre>
</article>

	<div id="coment"><div id="disqus_thread"></div></div>
	</main>
	<footer>
		<button onclick="location.href = '../../index.htm';">home</button>
		<button onclick="exibe();">seções</button>
		<button onclick="(document.head || document.body).appendChild(s);">comente</button>
	</footer>

	<script src="../../js/script.js"></script>
	<script src="../../js/prism.js"></script>
</body>
</html>
